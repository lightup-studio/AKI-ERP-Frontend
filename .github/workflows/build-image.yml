name: Build Docker Image

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version(Tag Name)'
        required: true
jobs:
  build_image:
    name: Build Image Then Push To GHCR
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2    
    - name: Build
      run: docker build -t ghcr.io/lightup-studio/aki-erp:${{ github.event.inputs.version || github.event.release.tag_name }} -t ghcr.io/lightup-studio/aki-erp:latest -f ./Dockerfile ./
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Push Image(version)
      run: docker push ghcr.io/lightup-studio/aki-erp:${{ github.event.inputs.version || github.event.release.tag_name }}
    - name: Push Image(latest)
      run: docker push ghcr.io/lightup-studio/aki-erp:latest

  restartContainer:
    name: Deploy Image
    runs-on: ubuntu-latest
    needs: [build_image] # 建置與發行成功後才可執行
    steps:
    - name: Login GHCR
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_ADDRESS }}
        username: root
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Setup Remote SSH And Run Command # 在遠端機器上運行docker restart指令重啟服務
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_ADDRESS }}
        username: root
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          docker stop aki-erp 2> /dev/null
          docker rm aki-erp 2> /dev/null
          docker run -d --name aki-erp -p 18888:80 ghcr.io/lightup-studio/aki-erp:${{ github.event.inputs.version || github.event.release.tag_name }}
